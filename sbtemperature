#! /bin/bash

BASE=https://api.switch-bot.com

dir="${HOME}/.api-key/switch-bot"
key="$(cat $dir/key.txt)"
json="${dir}/devices.json"
if [ ! -e "${json}" ]; then
    curl -sS \
	 -H "Content-Type: application/json" \
	 -H "Authorization: $key" \
	 -X GET \
	 "$BASE/v1.0/devices" \
	| jq .body > $json
    if [ "$(cat ${json})" = "null" ]; then
	echo error : failed to get device list.
	exit 1
    fi
fi

function concatenate
{
    if [ $FORMAT -eq 0 ] ;then
	jq -s 'add'
    elif [ $FORMAT -eq 1 ] ;then
	echo "ID,type,temperature,humidity,battery,Name"
	cat
    else
	echo "ID	type	temp.	humidity	battery	Name"
	cat
    fi
}

ALL=0
FORMAT=0
OUTPUT=
while (( $# > 0 ))
do
    case $1 in
	-c | --csv)
	    FORMAT=1
	    OUTPUT="@csv"
	    shift
	    ;;
	-t | --tsv)
	    FORMAT=2
	    OUTPUT="@tsv"
	    shift
	    ;;
	-j | --json)
	    FORMAT=0
	    shift
	    ;;
	-a | --all)
	    ALL=1
	    shift
	    ;;
	*)
	    break
	    ;;
    esac
done

if [ ${ALL} -eq 1 ]; then
    COND=""
elif [ $# -gt 0 ]; then
    COND="|select(.deviceId | IN(\"$(echo $@ | sed -e 's/ /","/g')\"))"
else
    COND="|select((has(\"deviceType\")|not) or (.deviceType == \"Meter\"))"
fi

DEVICE_QUERY=".deviceList[] ${COND}| [.deviceName,.deviceId] | @csv"
#echo "${DEVICE_QUERY}" 1>&2
(cat $json | jq -r "${DEVICE_QUERY}" | while read LINE
do
    NAME=${LINE%\",\"*}
    NAME=${NAME#\"}
    ID=${LINE#*\",\"}
    ID=${ID%\"}
    if [ ${FORMAT} -eq 0 ]; then
	echo "{\"${ID}\" : "$(
	    curl -sS \
		 -H "Content-Type: application/json" \
		 -H "Authorization: $key" \
		 "$BASE/v1.0/devices/$ID/status" \
		| jq -r ".body | . += {\"Name\": \"${NAME}\"}")'}'
    else
	curl -sS \
	     -H "Content-Type: application/json" \
	     -H "Authorization: $key" \
	     "$BASE/v1.0/devices/$ID/status" \
	    | jq -r ".body | [.deviceId,.deviceType,.temperature,.humidity,.battery,\"${NAME}\"] | ${OUTPUT}"
    fi
done) | concatenate
